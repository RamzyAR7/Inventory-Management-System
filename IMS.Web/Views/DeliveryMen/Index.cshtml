@model IEnumerable<IMS.DAL.Entities.DeliveryMan>
@using IMS.DAL.Entities

@{
    ViewData["Title"] = "Delivery Men";
    int totalCount = (int)ViewBag.TotalCount;
    int pageNumber = (int)ViewBag.PageNumber;
    int pageSize = (int)ViewBag.PageSize;
    int totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
    string sortBy = ViewBag.SortBy;
    bool sortDescending = ViewBag.SortDescending;
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-0">
        <h3 class="fw-semibold mb-1 d-flex align-items-center" style="color: #608fc8; font-size: 1.5rem;">
            <i class="bi bi-motorcycle me-2"></i> Delivery Men Management
        </h3>
        <a asp-action="Create" class="btn btn-primary rounded-pill px-3 fw-semibold">
            <i class="bi bi-plus-lg me-1"></i> Create New
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-primary text-white py-3">
            <h5 class="mb-0">Delivery Men List</h5>
        </div>
        <div class="card-body p-4">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="deliveryMenTable" width="100%" cellspacing="0">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>Full Name</th>
                            <th>Phone Number</th>
                            <th>Email</th>
                            <th>Status</th>
                            <th>Is Active</th>
                            <th>Manager</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Any())
                        {
                            int i = 1 + (pageNumber - 1) * pageSize;
                            foreach (var deliveryMan in Model)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@deliveryMan.FullName</td>
                                    <td>@deliveryMan.PhoneNumber</td>
                                    <td>@deliveryMan.Email</td>
                                    <td>
                                        <span class="badge rounded-pill @(deliveryMan.Status == DeliveryManStatus.Busy ? "bg-danger bg-opacity-10 text-danger" : "bg-success bg-opacity-10 text-success") px-3 py-1">
                                            @deliveryMan.Status
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge rounded-pill @(deliveryMan.IsActive ? "bg-success bg-opacity-10 text-success" : "bg-danger bg-opacity-10 text-danger") px-3 py-1">
                                            @(deliveryMan.IsActive ? "Yes" : "No")
                                        </span>
                                    </td>
                                    <td>@(deliveryMan.Manager?.UserName ?? "Not Assigned")</td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@deliveryMan.DeliveryManID"
                                               class="btn btn-info btn-sm" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@deliveryMan.DeliveryManID"
                                               class="btn btn-warning btn-sm" title="Edit">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@deliveryMan.DeliveryManID"
                                               class="btn btn-danger btn-sm" title="Delete"
                                               onclick="return confirm('Are you sure you want to delete this delivery man?');">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center text-muted py-4">
                                    <i class="bi bi-box-seam fs-4 mb-2"></i>
                                    <p class="mb-0">No delivery men found.</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (totalPages > 1)
            {
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@(pageNumber - 1)"
                               asp-route-pageSize="@pageSize"
                               asp-route-sortBy="@sortBy"
                               asp-route-sortDescending="@sortDescending">
                                Previous
                            </a>
                        </li>
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == pageNumber ? "active" : "")">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-pageNumber="@i"
                                   asp-route-pageSize="@pageSize"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-sortDescending="@sortDescending">
                                    @i
                                </a>
                            </li>
                        }
                        <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@(pageNumber + 1)"
                               asp-route-pageSize="@pageSize"
                               asp-route-sortBy="@sortBy"
                               asp-route-sortDescending="@sortDescending">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

<!-- Toast Container -->
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;"></div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <style>
        .d-flex.justify-content-between.align-items-center.mb-0 {
            margin-bottom: 1rem !important;
        }

        .container-fluid {
            max-width: 1400px;
        }

        .card {
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .card-header {
            background-color: #608fc8 !important;
            border-bottom: none;
            padding: 1rem 1.5rem;
        }

        h3.fw-semibold {
            color: #608fc8 !important;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
        }

        /* Table Styling */
        .table {
            font-size: 0.9rem;
            margin-bottom: 0;
        }

            .table th {
                background-color: #f8f9fa;
                font-weight: 600;
                color: #333;
                border-bottom: 1px solid #eaeaea;
                padding: 0.75rem;
                vertical-align: middle;
            }

            .table td {
                vertical-align: middle;
                padding: 0.75rem;
            }

        /* Action Buttons */
        .btn-group {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .btn {
            border-radius: 0.375rem !important;
            font-size: 0.875rem;
            font-weight: 500;
            padding: 0.4rem 0.9rem;
        }

        .btn-sm {
            padding: 0.3rem 0.7rem;
            font-size: 0.8rem;
            min-width: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .btn-primary {
            background-color: #608fc8;
            border-color: #608fc8;
        }

        .btn-info {
            background-color: #17a2b8;
            border-color: #17a2b8;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        .btn-danger {
            background-color: #dc3545;
            border-color: #dc3545;
        }

        /* Badges */
        .badge {
            border-radius: 0.25rem;
            padding: 0.4em 0.6em;
            font-size: 0.8rem;
            font-weight: 500;
        }

        /* Pagination */
        .pagination .page-link {
            border-radius: 0.375rem;
        }

        .pagination .active .page-link {
            background-color: #608fc8;
            border-color: #608fc8;
        }

        /* Responsive Adjustments */
        @@media (max-width: 768px) {
            .btn-group {
                flex-direction: column;
                align-items: flex-start;
            }
        }
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            const table = $('#deliveryMenTable').DataTable({
                responsive: true,
                language: {
                    emptyTable: "No delivery men found",
                    info: "Showing _START_ to _END_ of _TOTAL_ delivery men",
                    infoEmpty: "Showing 0 to 0 of 0 delivery men",
                    infoFiltered: "(filtered from _MAX_ total delivery men)",
                    lengthMenu: "Show _MENU_ delivery men per page",
                    search: "Search:",
                    zeroRecords: "No matching delivery men found"
                },
                paging: false,
                searching: false,
                info: false,
                columnDefs: [
                    { orderable: true, targets: [1, 2, 3, 4, 5, 6] }, // Sortable: FullName, PhoneNumber, Email, Status, IsActive, Manager
                    { orderable: false, targets: [0, 7] }, // Non-sortable: #, Actions
                    { responsivePriority: 1, targets: [1, 7] }, // Full Name, Actions
                    { responsivePriority: 2, targets: [4, 5] } // Status, IsActive
                ]
            });

            // Handle column sorting
            $('#deliveryMenTable thead th').on('click', function () {
                const columnIndex = table.column(this).index();
                const columnMap = [
                    '',              // 0 (#)
                    'FullName',      // 1
                    'PhoneNumber',   // 2
                    'Email',         // 3
                    'Status',        // 4
                    'IsActive',      // 5
                    'Manager',       // 6
                    ''               // 7 (Actions)
                ];
                const columnName = columnMap[columnIndex];
                if (columnName) {
                    const currentSortBy = '@sortBy';
                    const currentSortDescending = @Json.Serialize(sortDescending);
                    const newSortDescending = currentSortBy === columnName ? !currentSortDescending : false;
                    window.location.href = '@Url.Action("Index", new { pageNumber = 1, pageSize = pageSize })&sortBy=' + columnName + '&sortDescending=' + newSortDescending;
                }
            });
        });

        function showToast(message, type) {
            const toast = $(`
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `);

            $('#toastContainer').append(toast);
            const bsToast = new bootstrap.Toast(toast[0], { delay: 3000 });
            bsToast.show();

            toast.on('hidden.bs.toast', function () {
                $(this).remove();
            });
        }
    </script>
}

@model IEnumerable<Inventory_Management_System.ViewModels.ProductInventoryViewModel>

@{
    ViewData["Title"] = "Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class ="mb-4">Inventory </h2>
    <a href="@Url.Action("Index", "InventoryTransactions")" class="btn btn-outline-primary">
        Manage Inventory Transactions
    </a>
</div>

<p class="text-muted">Manage your products and stock levels</p>

<div class="mb-3">
    <a href="#" class="btn btn-primary">+ Add Product</a>
</div>

<div class="card">
    <div class="card-body">
        <input type="text" class="form-control mb-3" placeholder="Search..." />

        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Product Name</th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>Stock</th>
                    <th>Status</th>
                    <th>Last Updated</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    int rowIndex = 1;
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@(rowIndex++)</td>
                            <td><strong>@item.ProductName</strong></td>
                            <td><span class="badge bg-secondary">@item.Category</span></td>
                            <td>$@item.Price.ToString("F2")</td>
                            <td>@item.Stock</td>
                            <td>
                                @if (item.Stock > 0)
                                {
                                    <span class="badge bg-success">In Stock</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Out of Stock</span>
                                }
                            </td>
                            <td>@item.LastUpdated.ToString("yyyy-MM-dd")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No items found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

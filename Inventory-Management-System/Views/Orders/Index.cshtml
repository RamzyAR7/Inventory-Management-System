@model dynamic
@using Inventory_Management_System.Entities

@{
    ViewData["Title"] = "Orders";
    var orders = ViewBag.Orders as IEnumerable<Inventory_Management_System.Models.DTOs.Order.Responce.OrderResponseDto>;
    int totalCount = (int)ViewBag.TotalCount;
    int pageNumber = (int)ViewBag.PageNumber;
    int pageSize = (int)ViewBag.PageSize;
    int totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
    OrderStatus? statusFilter = ViewBag.StatusFilter;
}

<!-- Anti-Forgery Token -->
<form id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>

<div class="container-fluid py-4">
    <div class="bg-white p-4 rounded-4 shadow-sm animate__animated animate__fadeIn">

        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-0">
            <h3 class="fw-semibold mb-1 d-flex align-items-center" style="color: #608fc8; font-size: 1.5rem;">
                <i class="fas fa-clipboard-list me-2"></i> Orders Management
            </h3>
            <a asp-action="Create" class="btn btn-primary rounded-pill px-4 fw-semibold d-flex align-items-center">
                <i class="fas fa-plus me-2"></i> Create New Order
            </a>
        </div>

        <!-- Alert Messages -->
        @if (TempData["success"] != null)
        {
            <div class="alert alert-success small rounded-3 py-2 px-3 mb-3">@TempData["success"]</div>
        }
        @if (TempData["error"] != null)
        {
            <div class="alert alert-danger small rounded-3 py-2 px-3 mb-3">@TempData["error"]</div>
        }


        <!-- Card Header: Title , Filter -->
        <div class="card-header bg-white border-bottom py-3 d-flex justify-content-between align-items-center">

            <h3 class="fw-semibold text-primary mb-3 mt-5 d-flex align-items-center">
                <i class="fas fa-file-alt me-2 text-primary"></i> Orders List
            </h3>
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-light rounded-pill px-3 d-flex align-items-center" type="button"
                        id="statusFilterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-filter me-1"></i> Filter by Status
                </button>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="statusFilterDropdown">
                    <li><a class="dropdown-item" href="#" data-filter="all">All Orders</a></li>
                    @if (ViewBag.OrderStatuses is List<OrderStatus> statuses)
                    {
                        foreach (var status in statuses)
                        {
                            <li><a class="dropdown-item" href="#" data-filter="@status">@status</a></li>
                        }
                    }
                </ul>
            </div>
        </div>

        <!-- Card Body -->
        <div class="p-4 pt-3">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0" id="ordersTable">
                    <thead class="table-light small text-muted">
                        <tr>
                            <th>#</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Warehouse</th>
                            <th>Total Amount</th>
                            <th>Status</th>
                            <th>Created By</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (orders != null && orders.Any())
                        {
                            int i = 1 + (pageNumber - 1) * pageSize;
                            foreach (var order in orders)
                            {
                                <tr data-order-id="@order.OrderID">
                                    <td>@i</td>
                                    <td>@order.OrderDate</td>
                                    <td>@order.CustomerName</td>
                                    <td>@order.WarehouseName</td>
                                    <td>@order.TotalAmount.ToString("C")</td>
                                    <td>
                                        <span class="badge" data-status="@order.Status">@order.Status</span>
                                    </td>
                                    <td>@order.CreatedByUserName</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@order.OrderID"
                                               class="btn btn-outline-info btn-sm rounded-pill" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@order.OrderID"
                                               class="btn btn-outline-warning btn-sm rounded-pill edit-button"
                                               title="Edit" style="@(order.Status == OrderStatus.Pending ? "" : "display:none;")">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@order.OrderID"
                                               class="btn btn-outline-danger btn-sm rounded-pill delete-button"
                                               title="Delete" style="@(order.Status == OrderStatus.Cancelled ? "" : "display:none;")">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                            @if (order.Status != OrderStatus.Delivered)
                                            {
                                                <select class="form-select form-select-sm status-select"
                                                        data-order-id="@order.OrderID"
                                                        aria-label="Change status for order @order.OrderID">
                                                    <option value="" disabled selected>Change Status</option>
                                                    @foreach (var status in ViewBag.OrderStatuses as List<OrderStatus>)
                                                    {
                                                        if (status != order.Status && status != OrderStatus.Delivered)
                                                        {
                                                            <option value="@status">@status</option>
                                                        }
                                                    }
                                                </select>
                                            }
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center text-muted py-4">
                                    <i class="fas fa-box-open fa-2x mb-2 text-secondary"></i><br />
                                    No orders found@(statusFilter.HasValue ? $" for status {statusFilter}" : "").
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@(pageNumber - 1)"
                               asp-route-pageSize="@pageSize"
                               asp-route-statusFilter="@statusFilter">
                                Previous
                            </a>
                        </li>

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == pageNumber ? "active" : "")">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-pageNumber="@i"
                                   asp-route-pageSize="@pageSize"
                                   asp-route-statusFilter="@statusFilter">@i</a>
                            </li>
                        }

                        <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@(pageNumber + 1)"
                               asp-route-pageSize="@pageSize"
                               asp-route-statusFilter="@statusFilter">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>


<!-- Toast Container -->
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;"></div>


@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" />
    <style>
        .container-fluid {
            max-width: 1400px;
        }

        .card {
            border-radius: 1rem;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .card-header {
            background-color: #f1f5fb;
            border-bottom: 1px solid #dee2e6;
            padding: 1rem 1.5rem;
        }

            .card-header h6 {
                font-weight: 600;
                color: #333;
            }

        .dropdown-toggle {
            border-radius: 999px !important;
            font-weight: 500;
        }

        .dropdown-menu {
            border-radius: 0.5rem;
            font-size: 0.9rem;
            box-shadow: 0 8px 24px rgba(0,0,0,0.05);
        }

        .dropdown-item:hover {
            background-color: #f1f5fb;
        }

        .table {
            font-size: 0.9rem;
        }

            .table th {
                background-color: #f9fafc;
                font-weight: 600;
                color: #333;
                border-bottom: 1px solid #eaeaea;
            }

            .table td {
                vertical-align: middle;
                padding: 0.75rem;
            }

        .btn {
            border-radius: 999px;
            font-size: 0.875rem;
            font-weight: 500;
            padding: 0.4rem 0.9rem;
        }

        .btn-sm {
            padding: 0.3rem 0.7rem;
            font-size: 0.8rem;
        }

        .btn-outline-light {
            border: 1px solid #fff;
            color: #fff;
        }

            .btn-outline-light:hover {
                background-color: #fff;
                color: #007bff;
            }

        .btn-outline-primary {
            border: 1px solid #3b82f6;
            color: #3b82f6;
        }

            .btn-outline-primary:hover {
                background-color: #3b82f6;
                color: #fff;
            }

        .badge {
            border-radius: 0.375rem;
            padding: 0.4em 0.6em;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .badge-pending {
            background-color: #ffeeba;
            color: #856404;
        }

        .badge-confirmed {
            background-color: #bee5eb;
            color: #0c5460;
        }

        .badge-shipped {
            background-color: #cce5ff;
            color: #004085;
        }

        .badge-delivered {
            background-color: #d4edda;
            color: #155724;
        }

        .badge-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-select {
            width: 130px;
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
            border-radius: 0.5rem;
            border: 1px solid #ced4da;
        }

        .toast {
            border-radius: 0.5rem;
            font-size: 0.875rem;
            box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
        }

            .toast .toast-body {
                padding: 0.75rem 1rem;
            }

            .toast.bg-success {
                background-color: #28a745 !important;
            }

            .toast.bg-danger {
                background-color: #dc3545 !important;
            }

            .toast.bg-warning {
                background-color: #ffc107 !important;
            }

        .pagination .page-link {
            border-radius: 0.375rem;
            color: #333;
        }

        .pagination .active .page-link {
            background-color: #007bff;
            color: #fff;
            border-color: #007bff;
        }

    </style>
}


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            const table = $('#ordersTable').DataTable({
                responsive: true,
                language: {
                    emptyTable: "No orders found",
                    info: "Showing _START_ to _END_ of _TOTAL_ orders",
                    infoEmpty: "Showing 0 to 0 of 0 orders",
                    infoFiltered: "(filtered from _MAX_ total orders)",
                    lengthMenu: "Show _MENU_ orders per page",
                    search: "Search:",
                    zeroRecords: "No matching orders found"
                },
                paging: false,
                searching: false,
                info: false,
                columnDefs: [
                    { orderable: false, targets: [7] }, // Actions column
                    { responsivePriority: 1, targets: [0, 7] },
                    { responsivePriority: 2, targets: [1, 2] }
                ],
                drawCallback: function () {
                    // Apply badge classes after table draw
                    $('span.badge').each(function () {
                        const status = $(this).data('status').toString();
                        $(this).addClass(getStatusBadgeClass(status));
                    });
                }
            });

            // Handle status filter dropdown
            $('.dropdown-menu a[data-filter]').on('click', function (e) {
                e.preventDefault();
                const filterValue = $(this).data('filter');
                if (filterValue === 'all') {
                    window.location.href = '@Url.Action("Index", new { pageNumber = 1, pageSize = 10 })';
                } else {
                    window.location.href = '@Url.Action("Index", new { pageNumber = 1, pageSize = 10 })' + &statusFilter=${filterValue};
                }
                $('#statusFilterDropdown').text('Filter: ' + $(this).text());
            });

            // Handle status change
            $('.status-select').on('change', function () {
                const orderId = $(this).data('order-id');
                const newStatus = $(this).val();
                const $row = $(this).closest('tr');
                const $badge = $row.find('.badge');
                const $select = $(this);
                const originalStatus = $badge.data('status');

                if (!orderId || !newStatus) {
                    showToast('Invalid order or status.', 'danger');
                    return;
                }

                // Get anti-forgery token
                const token = $('#antiForgeryForm input[name="__RequestVerificationToken"]').val();
                if (!token) {
                    showToast('Error: Anti-forgery token not found.', 'danger');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Orders")',
                    type: 'POST',
                    data: {
                        id: orderId,
                        status: newStatus,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            // Update badge text and class
                            $badge.text(newStatus).data('status', newStatus);
                            $badge.removeClass('badge-pending badge-confirmed badge-shipped badge-delivered badge-cancelled')
                                  .addClass(getStatusBadgeClass(newStatus));
                            showToast(response.message, 'success');

                            // Update Edit button visibility
                            const $editButton = $row.find('.edit-button');
                            if (newStatus === 'Pending') {
                                $editButton.show();
                            } else {
                                $editButton.hide();
                            }

                            // Update Delete button visibility
                            const $deleteButton = $row.find('.delete-button');
                            if (newStatus === 'Cancelled') {
                                $deleteButton.show();
                            } else {
                                $deleteButton.hide();
                            }

                            // If status is Delivered, remove the dropdown
                            if (newStatus === 'Delivered') {
                                $select.remove();
                            }

                            // Reset dropdown
                            $select.val('');
                        } else {
                            showToast('Error: ' + response.message, 'danger');
                            $select.val('');
                        }
                    },
                    error: function (xhr) {
                        const errorMsg = xhr.responseJSON?.message || xhr.responseText || 'Failed to update status.';
                        showToast('Error: ' + errorMsg, 'danger');
                        $select.val('');
                    }
                });
            });
        });

        function getStatusBadgeClass(status) {
            switch (status) {
                case 'Pending': return 'badge-pending';
                case 'Confirmed': return 'badge-confirmed';
                case 'Shipped': return 'badge-shipped';
                case 'Delivered': return 'badge-delivered';
                case 'Cancelled': return 'badge-cancelled';
                default: return 'badge-secondary';
            }
        }

        function showToast(message, type) {
            const toast = $(
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            );

            $('#toastContainer').append(toast);
            const bsToast = new bootstrap.Toast(toast[0], { delay: 3000 });
            bsToast.show();

            toast.on('hidden.bs.toast', function () {
                $(this).remove();
            });
        }
    </script>
}
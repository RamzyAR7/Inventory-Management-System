@model Inventory_Management_System.Entities.Product

@{
    ViewData["Title"] = "Product Details";
}

<div class="product-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">Product Details</h1>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.ProductID" class="btn btn-warning">
                <i class="align-middle me-1" data-feather="edit"></i> Edit
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="align-middle me-1" data-feather="arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="product-details">
        <dl class="row">
            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ProductName)</dt>
            <dd class="col-sm-9">@Model.ProductName</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ProductDescription)</dt>
            <dd class="col-sm-9">@Model.ProductDescription</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Price)</dt>
            <dd class="col-sm-9">@Model.Price.ToString("C")</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.RecoderLevel)</dt>
            <dd class="col-sm-9">@Model.RecoderLevel</dd>

            <dt class="col-sm-3">Stock Quantity</dt>
            <dd class="col-sm-9">
                @if (Model.WarehouseStocks?.Any() == true)
                {
                    @string.Join(", ", Model.WarehouseStocks.Select(w => w.StockQuantity))
                }
                else
                {
                    <span class="text-muted">None</span>
                }
            </dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Category)</dt>
            <dd class="col-sm-9">
                <span class="badge bg-primary">@Model.Category?.CategoryName</span>
            </dd>

            <dt class="col-sm-3">Suppliers</dt>
            <dd class="col-sm-9">
                @if (Model.Suppliers?.Any() == true)
                {
                    foreach (var supplier in Model.Suppliers)
                    {
                        <span class="badge bg-info me-1">@supplier.Supplier?.SupplierName</span>
                    }
                }
                else
                {
                    <span class="text-muted">None</span>
                }
            </dd>

            <dt class="col-sm-3">Warehouse Name</dt>
            <dd class="col-sm-9">
                @if (Model.WarehouseStocks?.Any() == true)
                {
                    @string.Join(", ", Model.WarehouseStocks.Select(w => w.Warehouse.WarehouseName))
                }
                else
                {
                    <span class="text-muted">None</span>
                }
            </dd>
        </dl>
    </div>
</div>

@section Styles {
    <style>
        .product-container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        }

        .badge {
            font-weight: 500;
            padding: 5px 10px;
        }

        /* Fix description list layout */
        .product-details dl dt {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .product-details dl dd {
            margin-bottom: 1rem;
            word-wrap: break-word; /* Ensure long text wraps properly */
        }

        .product-details dl dd.text-muted {
            font-style: italic;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            feather.replace();
        });
    </script>
}

@model dynamic
@using Inventory_Management_System.Entities

@{
    ViewData["Title"] = "Shipments";
    var shipments = ViewBag.Shipments as IEnumerable<Inventory_Management_System.Entities.Shipment>;
    int totalCount = (int)ViewBag.TotalCount;
    int pageNumber = (int)ViewBag.PageNumber;
    int pageSize = (int)ViewBag.PageSize;
    int totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
    ShipmentStatus? statusFilter = ViewBag.StatusFilter;
    var allStatuses = ViewBag.ShipmentStatuses as List<ShipmentStatus>;
}

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-dark">Shipments</h1>
        <div class="d-flex align-items-center">
            <div class="dropdown me-2">
                <button class="btn btn-outline-primary dropdown-toggle" type="button" id="statusFilterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-filter me-1"></i>
                    @(statusFilter.HasValue ? statusFilter.Value.ToString() : "All Statuses")
                </button>
                <ul class="dropdown-menu" aria-labelledby="statusFilterDropdown">
                    <li><a class="dropdown-item @(!statusFilter.HasValue ? "active" : "")" href="@Url.Action("Index", new { pageNumber = 1, pageSize = pageSize })">All Statuses</a></li>
                    @foreach (var status in allStatuses)
                    {
                        <li><a class="dropdown-item @(statusFilter == status ? "active" : "")" href="@Url.Action("Index", new { pageNumber = 1, pageSize = pageSize, statusFilter = status })">@status</a></li>
                    }
                </ul>
            </div>
            <div class="input-group" style="width: 250px;">
                <input type="text" class="form-control" placeholder="Search shipments..." id="searchInput">
                <button class="btn btn-primary" type="button" id="searchButton">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    @if (TempData["success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-primary text-white py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold">Shipment List</h6>
            <div>
                <span class="badge bg-light text-dark me-2">
                    Total: @totalCount
                </span>
                <span class="badge bg-light text-dark">
                    Showing: @((pageNumber - 1) * pageSize + 1)-@Math.Min(pageNumber * pageSize, totalCount)
                </span>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="shipmentsTable" width="100%" cellspacing="0">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>Customer</th>
                            <th>Warehouse</th>
                            <th>Customer Number</th>
                            <th>Destination</th>
                            <th>Status</th>
                            <th>Items</th>
                            <th>Shipped Date</th>
                            <th>Delivery Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (shipments != null && shipments.Any())
                        {
                            int i = (pageNumber - 1) * pageSize + 1;
                            @foreach (var shipment in shipments)
                            {
                                <tr data-shipment-id="@shipment.ShipmentID">
                                    <td>@i</td>
                                    <td>@(shipment.Order?.Customer?.FullName ?? "N/A")</td>
                                    <td>@(shipment.Order?.Warehouse?.WarehouseName ?? "N/A")</td>
                                    <td>
                                        @(shipment.TrackingNumber ?? "N/A")>
                                    </td>
                                    <td>@shipment.Destination</td>
                                    <td>
                                        <div class="status-container">
                                            <span class="badge status-label 
                                                  @GetStatusBadgeClass(shipment.Status)"
                                                  data-actual-status="@shipment.Status">
                                                @shipment.Status
                                            </span>
                                            @if (shipment.Status != ShipmentStatus.Delivered)
                                            {
                                                <button type="button" class="btn btn-outline-secondary btn-sm change-status-btn ms-2" 
                                                        title="Change Status">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            }
                                            <div class="status-edit d-none">
                                                <select class="form-select form-select-sm status-select">
                                                    @foreach (ShipmentStatus status in allStatuses)
                                                    {
                                                        <option value="@status" selected="@(status == shipment.Status)">@status</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@shipment.ItemCount</td>
                                    <td>@(shipment.ShippedDate?.ToString("MM/dd/yyyy") ?? "N/A")</td>
                                    <td class="delivery-date">@(shipment.DeliveryDate?.ToString("MM/dd/yyyy") ?? "N/A")</td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a asp-action="Details" asp-route-id="@shipment.ShipmentID" 
                                               class="btn btn-info" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <button type="button" class="btn btn-primary save-changes" 
                                                    title="Save Changes" @(shipment.Status == ShipmentStatus.Delivered ? "disabled" : "")>
                                                <i class="fas fa-save"></i>
                                            </button>
                                            @if (shipment.Status == ShipmentStatus.Cancelled)
                                            {
                                                <a asp-action="Delete" asp-route-id="@shipment.ShipmentID" 
                                                   class="btn btn-danger delete-link" title="Delete">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="10" class="text-center text-muted py-4">
                                    <i class="fas fa-box-open fa-2x mb-2"></i>
                                    <p class="mb-0">No shipments found</p>
                                    @if (statusFilter.HasValue)
                                    {
                                        <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-primary mt-2">
                                            Clear filters
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-pageNumber="@(pageNumber - 1)" 
                               asp-route-pageSize="@pageSize"
                               asp-route-statusFilter="@statusFilter">
                                Previous
                            </a>
                        </li>
                        
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == pageNumber ? "active" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-pageNumber="@i" 
                                   asp-route-pageSize="@pageSize"
                                   asp-route-statusFilter="@statusFilter">@i</a>
                            </li>
                        }
                        
                        <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-pageNumber="@(pageNumber + 1)" 
                               asp-route-pageSize="@pageSize"
                               asp-route-statusFilter="@statusFilter">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>

    <div class="mt-3">
        <a asp-controller="Orders" asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-2"></i>Back to Orders
        </a>
    </div>
</div>

<!-- Toast Container -->
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;"></div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        .card {
            border-radius: 0.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
        
        .card-header {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.5px;
            border-bottom-width: 1px;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        .status-label {
            font-size: 0.75rem;
            padding: 0.35rem 0.65rem;
            min-width: 80px;
            display: inline-block;
            text-align: center;
        }
        
        .badge.bg-warning { color: #000; }
        
        .status-container {
            display: flex;
            align-items: center;
        }
        
        .change-status-btn {
            padding: 0.2rem 0.4rem;
            line-height: 1;
        }
        
        .status-edit {
            min-width: 120px;
        }
        
        .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
        
        .page-link {
            color: #0d6efd;
        }
        
        #searchInput {
            max-width: 200px;
        }
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Status change toggle
            $(document).on('click', '.change-status-btn', function() {
                const $container = $(this).closest('.status-container');
                $container.find('.status-label, .change-status-btn').addClass('d-none');
                $container.find('.status-edit').removeClass('d-none');
            });
            
            // Save changes
            $(document).on('click', '.save-changes', function() {
                const $row = $(this).closest('tr');
                const shipmentId = $row.data('shipment-id');
                const trackingNumber = $row.find('.tracking-number').val();
                const newStatus = $row.find('.status-select').val();
                const originalStatus = $row.find('.status-select').data('original');
                
                if ($row.find('.status-label').data('actual-status') === 'Delivered') {
                    showToast('Cannot modify delivered shipments', 'warning');
                    return;
                }
                
                // AJAX call to save changes
                $.ajax({
                    url: '@Url.Action("UpdateShipment", "Shipments")',
                    type: 'POST',
                    data: {
                        shipmentId: shipmentId,
                        trackingNumber: trackingNumber,
                        status: newStatus
                    },
                    success: function(response) {
                        if (response.success) {
                            // Update UI
                            const $statusLabel = $row.find('.status-label');
                            $statusLabel.text(newStatus)
                                .data('actual-status', newStatus)
                                .removeClass('bg-warning bg-info bg-danger bg-success bg-secondary')
                                .addClass(getStatusBadgeClass(newStatus));
                            
                            $row.find('.status-edit').addClass('d-none');
                            $statusLabel.removeClass('d-none');
                            
                            if (newStatus !== 'Delivered') {
                                $row.find('.change-status-btn').removeClass('d-none');
                            } else {
                                $row.find('.change-status-btn').remove();
                                $row.find('.save-changes').prop('disabled', true);
                                $row.find('.delivery-date').text(response.deliveryDate || 'N/A');
                            }
                            
                            showToast('Shipment updated successfully', 'success');
                        } else {
                            showToast(response.message || 'Failed to update shipment', 'danger');
                        }
                    },
                    error: function(xhr) {
                        showToast('Error updating shipment: ' + xhr.responseText, 'danger');
                    }
                });
            });
            
            // Search functionality
            $('#searchButton').click(function() {
                const searchTerm = $('#searchInput').val().toLowerCase();
                if (searchTerm) {
                    window.location.href = '@Url.Action("Index")' + 
                        '?searchTerm=' + encodeURIComponent(searchTerm) +
                        '&statusFilter=@statusFilter';
                }
            });
            
            $('#searchInput').keypress(function(e) {
                if (e.which === 13) {
                    $('#searchButton').click();
                }
            });
        });
        
        function getStatusBadgeClass(status) {
            switch(status) {
                case 'Pending': return 'bg-warning';
                case 'InTransit': return 'bg-info';
                case 'Cancelled': return 'bg-danger';
                case 'Delivered': return 'bg-success';
                default: return 'bg-secondary';
            }
        }
        
        function showToast(message, type) {
            const toast = $(`
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `);
            
            $('#toastContainer').append(toast);
            const bsToast = new bootstrap.Toast(toast[0], { delay: 3000 });
            bsToast.show();
            
            toast.on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }
    </script>
}

@functions {
    public string GetStatusBadgeClass(ShipmentStatus status)
    {
        return status switch
        {
            ShipmentStatus.Pending => "bg-warning",
            ShipmentStatus.InTransit => "bg-info",
            ShipmentStatus.Cancelled => "bg-danger",
            ShipmentStatus.Delivered => "bg-success",
            _ => "bg-secondary"
        };
    }
}

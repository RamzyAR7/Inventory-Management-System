@model dynamic
@using Inventory_Management_System.Entities

@{
    ViewData["Title"] = "Shipments";
    var shipments = ViewBag.Shipments as IEnumerable<Inventory_Management_System.Entities.Shipment>;
    int totalCount = (int)ViewBag.TotalCount;
    int pageNumber = (int)ViewBag.PageNumber;
    int pageSize = (int)ViewBag.PageSize;
    int totalPages = (int)Math.Ceiling((double)totalCount / pageSize);
    ShipmentStatus? statusFilter = ViewBag.StatusFilter;
    var allStatuses = Enum.GetValues<ShipmentStatus>();
}

<!-- Add Anti-Forgery Token Form -->
<form id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-dark">Shipments Management</h1>
    </div>

    @if (TempData["success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-primary text-white py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold">Shipment List</h6>
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-light dropdown-toggle" type="button" 
                        id="statusFilterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-filter mr-1"></i>Filter by Status
                </button>
                <ul class="dropdown-menu" aria-labelledby="statusFilterDropdown">
                    <li><a class="dropdown-item" href="#" data-filter="all">All Shipments</a></li>
                    @foreach (var status in allStatuses)
                    {
                        <li><a class="dropdown-item" href="#" data-filter="@status">@status</a></li>
                    }
                </ul>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="shipmentsTable" width="100%" cellspacing="0">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Warehouse</th>
                            <th>Tracking #</th>
                            <th>Destination</th>
                            <th>Items</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (shipments != null && shipments.Any())
                        {
                            int i = 1;
                            @foreach (var shipment in shipments)
                            {
                                <tr data-shipment-id="@shipment.ShipmentID">
                                    <td>@i</td>
                                    <td>@(shipment.Order?.OrderDate.ToString("MM/dd/yyyy") ?? "N/A")</td>
                                    <td>@(shipment.Order?.Customer?.FullName ?? "N/A")</td>
                                    <td>@(shipment.Order?.Warehouse?.WarehouseName ?? "N/A")</td>
                                    <td>@(shipment.TrackingNumber ?? "N/A")</td>
                                    <td>@shipment.Destination</td>
                                    <td>@shipment.ItemCount</td>
                                    <td>
                                        <span class="badge" data-status="@shipment.Status">
                                            @shipment.Status
                                        </span>
                                        @if (shipment.Status != ShipmentStatus.Delivered)
                                        {
                                            <select class="form-select form-select-sm status-select" 
                                                    data-shipment-id="@shipment.ShipmentID" 
                                                    aria-label="Change status for shipment @shipment.ShipmentID">
                                                <option value="" disabled selected>Change Status</option>
                                                @foreach (var status in allStatuses)
                                                {
                                                    if (status != shipment.Status)
                                                    {
                                                        <option value="@status">@status</option>
                                                    }
                                                }
                                            </select>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@shipment.ShipmentID" 
                                               class="btn btn-info btn-sm" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (shipment.Status == ShipmentStatus.Cancelled)
                                            {
                                                <a asp-action="Delete" asp-route-id="@shipment.ShipmentID"
                                                   class="btn btn-warning btn-sm" title="Delete">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center text-muted py-4">
                                    <i class="fas fa-box-open fa-2x mb-2"></i>
                                    <p class="mb-0">No shipments found</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (totalPages > 1)
            {
                <nav class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-pageNumber="@(pageNumber - 1)" 
                               asp-route-pageSize="@pageSize"
                               asp-route-statusFilter="@statusFilter">
                                Previous
                            </a>
                        </li>
                        
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == pageNumber ? "active" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-pageNumber="@i" 
                                   asp-route-pageSize="@pageSize"
                                   asp-route-statusFilter="@statusFilter">@i</a>
                            </li>
                        }
                        
                        <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-pageNumber="@(pageNumber + 1)" 
                               asp-route-pageSize="@pageSize"
                               asp-route-statusFilter="@statusFilter">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>

    <div class="mt-3">
        <a asp-controller="Orders" asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-2"></i>Back to Orders
        </a>
    </div>
</div>

<!-- Toast Container -->
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;"></div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" integrity="sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" />
    <style>
        /* General Layout */
        .container-fluid {
            max-width: 1400px;
        }

        .card {
            border-radius: 0.5rem;
            overflow: hidden;
        }

        .card-header {
            border-bottom: none;
        }

        /* Badges */
        .badge {
            padding: 0.5rem 0.75rem;
            font-size: 0.85rem;
            border-radius: 0.25rem;
        }

        .badge-Pending {
            background-color: #ffc107;
            color: #212529;
        }

        .badge-InTransit {
            background-color: #17a2b8;
            color: #fff;
        }

        .badge-Delivered {
            background-color: #28a745;
            color: #fff;
        }

        .badge-Cancelled {
            background-color: #dc3545;
            color: #fff;
        }

        /* Buttons */
        .btn {
            border-radius: 0.375rem;
            padding: 0.5rem 1rem;
            font-size: 0.95rem;
            transition: all 0.2s ease;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .btn-info {
            background-color: #17a2b8;
            border-color: #17a2b8;
        }

        .btn-info:hover {
            background-color: #117a8b;
            border-color: #117a8b;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        .btn-warning:hover {
            background-color: #e0a800;
            border-color: #e0a800;
        }

        .btn-outline-light {
            border-color: #fff;
            color: #fff;
        }

        .btn-outline-light:hover {
            background-color: #fff;
            color: #007bff;
        }

        .btn-sm {
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
        }

        /* Dropdown */
        .dropdown-menu {
            border-radius: 0.375rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .dropdown-item {
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
        }

        .dropdown-item:hover {
            background-color: #f8f9fa;
        }

        /* Table */
        .table {
            font-size: 0.9rem;
            margin-bottom: 0;
        }

        .table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: #333;
            padding: 0.75rem;
            white-space: nowrap;
        }

        .table td {
            vertical-align: middle;
            padding: 0.75rem;
        }

        .table-responsive {
            border-radius: 0.375rem;
            overflow-x: auto;
        }

        /* Status Select */
        .status-select {
            width: 130px;
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
            border-radius: 0.375rem;
            margin-left: 0.5rem;
        }

        /* Toast */
        .toast {
            border-radius: 0.375rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            font-size: 0.9rem;
            max-width: 350px;
        }

        .toast .toast-body {
            padding: 0.75rem 1rem;
        }

        .toast.bg-success {
            background-color: #28a745 !important;
        }

        .toast.bg-danger {
            background-color: #dc3545 !important;
        }

        .toast.bg-warning {
            background-color: #ffc107 !important;
        }
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            const table = $('#shipmentsTable').DataTable({
                responsive: true,
                language: {
                    emptyTable: "No shipments found",
                    info: "Showing _START_ to _END_ of _TOTAL_ shipments",
                    infoEmpty: "Showing 0 to 0 of 0 shipments",
                    infoFiltered: "(filtered from _MAX_ total shipments)",
                    lengthMenu: "Show _MENU_ shipments per page",
                    search: "Search:",
                    zeroRecords: "No matching shipments found"
                },
                paging: false,
                searching: false,
                info: false,
                columnDefs: [
                    { orderable: false, targets: [8] }, // Actions column
                    { responsivePriority: 1, targets: [0, 8] },
                    { responsivePriority: 2, targets: [2, 3] }
                ],
                drawCallback: function () {
                    // Apply badge classes after table draw
                    $('span.badge').each(function () {
                        const status = $(this).data('status').toString();
                        $(this).addClass(getStatusBadgeClass(status));
                    });
                }
            });

            // Handle status filter dropdown
            $('.dropdown-menu a[data-filter]').on('click', function (e) {
                e.preventDefault();
                const filterValue = $(this).data('filter');
                if (filterValue === 'all') {
                    window.location.href = '@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize })';
                } else {
                    window.location.href = '@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize })' + `&statusFilter=${filterValue}`;
                }
                $('#statusFilterDropdown').text('Filter: ' + $(this).text());
            });

            // Handle status change
            $('.status-select').on('change', function () {
                const shipmentId = $(this).data('shipment-id');
                const newStatus = $(this).val();
                const $badge = $(this).closest('tr').find('.badge');
                const $select = $(this);
                const originalStatus = $badge.data('status');

                if (!shipmentId || !newStatus) {
                    showToast('Invalid shipment or status.', 'danger');
                    return;
                }

                // Get anti-forgery token
                const token = $('#antiForgeryForm input[name="__RequestVerificationToken"]').val();
                if (!token) {
                    showToast('Error: Anti-forgery token not found.', 'danger');
                    return;
                }

                console.log('Sending AJAX request:', {
                    url: '@Url.Action("UpdateStatus", "Shipments")',
                    shipmentId: shipmentId,
                    newStatus: newStatus,
                    token: token
                });

                $.ajax({
                    url: '@Url.Action("UpdateStatus", "Shipments")',
                    type: 'POST',
                    data: {
                        shipmentId: shipmentId,
                        newStatus: newStatus,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        console.log('AJAX success:', response);
                        if (response.success) {
                            // Update badge text and class
                            $badge.text(newStatus).data('status', newStatus);
                            $badge.removeClass('badge-Pending badge-InTransit badge-Delivered badge-Cancelled')
                                  .addClass(getStatusBadgeClass(newStatus));
                            showToast(response.message, 'success');

                            // Update Delete button visibility
                            const $deleteButton = $(`a[href*="${shipmentId}"][title="Delete"]`);
                            if (newStatus !== 'Cancelled') {
                                $deleteButton.hide();
                            } else {
                                $deleteButton.show();
                            }

                            // If status is Delivered, remove the dropdown
                            if (newStatus === 'Delivered') {
                                $select.remove();
                            }

                            $select.val('');
                        } else {
                            showToast('Error: ' + response.message, 'danger');
                            $select.val('');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX error:', {
                            status: status,
                            error: error,
                            responseText: xhr.responseText,
                            responseJSON: xhr.responseJSON
                        });
                        const errorMsg = xhr.responseJSON?.message || xhr.responseText || 'Failed to update status. Check console for details.';
                        showToast('Error: ' + errorMsg, 'danger');
                        $select.val('');
                    }
                });
            });
        });

        function getStatusBadgeClass(status) {
            switch (status) {
                case 'Pending': return 'badge-Pending';
                case 'InTransit': return 'badge-InTransit';
                case 'Delivered': return 'badge-Delivered';
                case 'Cancelled': return 'badge-Cancelled';
                default: return 'badge-secondary';
            }
        }

        function showToast(message, type) {
            const toast = $(`
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `);

            $('#toastContainer').append(toast);
            const bsToast = new bootstrap.Toast(toast[0], { delay: 3000 });
            bsToast.show();

            toast.on('hidden.bs.toast', function () {
                $(this).remove();
            });
        }
    </script>
}
